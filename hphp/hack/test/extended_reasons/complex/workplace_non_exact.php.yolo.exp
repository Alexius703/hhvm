error: NastCheck[3030] Lacking `__construct`, class `Test` does not initialize its private member(s): `c1`

 8 | abstract class »Test« {
 9 |   private C1 $c1;

File "workplace_non_exact.php", line 8, character 16 - line 8, character 19:

error: Typing[4110] Invalid argument

  8 | abstract class Test {
  9 |   private C1 $c1;
 10 | 
 11 |   public function fInstance(): void {
 12 |     $this->c1->f(»$this->c1«);
 13 |     $c1 = $this->c1;
 14 |     $c1->f($c1);

File "workplace_non_exact.php", line 12, character 18 - line 12, character 26:

Expected `<expr#3> as C1`

 3 | abstract class C1 {
 4 |   public function f(»this« $_): void {
 5 |   }
 6 | }

File "workplace_non_exact.php", line 4, character 21 - line 4, character 24:

  where `<expr#3>` is a reference to this expression

  8 | abstract class Test {
  9 |   private C1 $c1;
 10 | 
 11 |   public function fInstance(): void {
 12 |     »$this->c1«->f($this->c1);
 13 |     $c1 = $this->c1;
 14 |     $c1->f($c1);

File "workplace_non_exact.php", line 12, character 5 - line 12, character 13:

But got `C1`

 8 | abstract class Test {
 9 |   private »C1« $c1;
10 | 
11 |   public function fInstance(): void {
12 |     $this->c1->f($this->c1);
13 |     $c1 = $this->c1;
14 |     $c1->f($c1);

File "workplace_non_exact.php", line 9, character 11 - line 9, character 12:

This error has 5 steps, a maximum depth of 1 and contains 1 reversal.

Here's why: this hint

 8 | abstract class Test {
 9 |   private »C1« $c1;
10 | 
11 |   public function fInstance(): void {
12 |     $this->c1->f($this->c1);
13 |     $c1 = $this->c1;
14 |     $c1->f($c1);

File "workplace_non_exact.php", line 9, character 11 - line 9, character 12:

flows into this expression

  8 | abstract class Test {
  9 |   private C1 $c1;
 10 | 
 11 |   public function fInstance(): void {
 12 |     $this->c1->f(»$this«->c1);
 13 |     $c1 = $this->c1;
 14 |     $c1->f($c1);

File "workplace_non_exact.php", line 12, character 18 - line 12, character 22:

which itself flows into this type variable

  8 | abstract class Test {
  9 |   private C1 $c1;
 10 | 
 11 |   public function fInstance(): void {
 12 |     $this->c1->f(»$this->c1«);
 13 |     $c1 = $this->c1;
 14 |     $c1->f($c1);

File "workplace_non_exact.php", line 12, character 18 - line 12, character 26:

which itself flows into this expression

  8 | abstract class Test {
  9 |   private C1 $c1;
 10 | 
 11 |   public function fInstance(): void {
 12 |     $this->c1->f(»$this->c1«);
 13 |     $c1 = $this->c1;
 14 |     $c1->f($c1);

File "workplace_non_exact.php", line 12, character 18 - line 12, character 26:

which itself flows up into this function or method  as the 1st function parameter

 3 | abstract class C1 {
 4 |   public function »f«(this $_): void {
 5 |   }
 6 | }

File "workplace_non_exact.php", line 4, character 19 - line 4, character 19:

which itself flows down into this hint as the 1st function parameter

 3 | abstract class C1 {
 4 |   public function f(»this« $_): void {
 5 |   }
 6 | }

File "workplace_non_exact.php", line 4, character 21 - line 4, character 24:

Flow:
{
  "Rflow":[
    {
      "Rflow":[
        {
          "Rhint":[{"filename":"workplace_non_exact.php","line":9,"char_start":11,"char_end":12}]
        },
        {
          "Rflow":[
            {
              "Rflow":[
                {
                  "Rflow":[
                    {
                      "Rwitness":[
                        {"filename":"workplace_non_exact.php","line":12,"char_start":18,"char_end":22}
                      ]
                    },
                    {
                      "Rtype_variable":[
                        {"filename":"workplace_non_exact.php","line":12,"char_start":18,"char_end":26}
                      ]
                    }
                  ]
                },
                {
                  "Rwitness":[
                    {"filename":"workplace_non_exact.php","line":12,"char_start":18,"char_end":26}
                  ]
                }
              ]
            },
            {
              "Rprj":[
                {"Symm":[{"Prj_symm_fn_param":[0,0]}]},
                {
                  "Rsupport_dynamic_type":[{"filename":"workplace_non_exact.php","line":4,"char_start":19,"char_end":19}]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "Rexpr_dep_type":[
        {
          "Rhint":[{"filename":"workplace_non_exact.php","line":4,"char_start":21,"char_end":24}]
        },
        {"filename":"workplace_non_exact.php","line":12,"char_start":5,"char_end":13},
        {"ERexpr":["3"]}
      ]
    }
  ]
}


File "", line 0, character 0 - line 0, character -1:

Since `C1` is not final

 8 | abstract class Test {
 9 |   private »C1« $c1;
10 | 
11 |   public function fInstance(): void {
12 |     $this->c1->f($this->c1);
13 |     $c1 = $this->c1;
14 |     $c1->f($c1);

File "workplace_non_exact.php", line 9, character 11 - line 9, character 12:

this might not be a `C1`

 8 | abstract class Test {
 9 |   private »C1« $c1;
10 | 
11 |   public function fInstance(): void {
12 |     $this->c1->f($this->c1);
13 |     $c1 = $this->c1;
14 |     $c1->f($c1);

File "workplace_non_exact.php", line 9, character 11 - line 9, character 12:

2 errors found.
