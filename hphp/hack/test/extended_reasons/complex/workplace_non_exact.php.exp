error: NastCheck[3030] Lacking `__construct`, class `Test` does not initialize its private member(s): `c1`

 8 | abstract class »Test« {
 9 |   private C1 $c1;

File "workplace_non_exact.php", line 8, character 16 - line 8, character 19:

error: Typing[4110] Invalid argument

  8 | abstract class Test {
  9 |   private C1 $c1;
 10 | 
 11 |   public function fInstance(): void {
 12 |     $this->c1->f(»$this->c1«);
 13 |     $c1 = $this->c1;
 14 |     $c1->f($c1);

File "workplace_non_exact.php", line 12, character 18 - line 12, character 26:

Expected `<expr#3> as C1`

 3 | abstract class C1 {
 4 |   public function f(»this« $_): void {
 5 |   }
 6 | }

File "workplace_non_exact.php", line 4, character 21 - line 4, character 24:

  where `<expr#3>` is a reference to this expression

  8 | abstract class Test {
  9 |   private C1 $c1;
 10 | 
 11 |   public function fInstance(): void {
 12 |     »$this->c1«->f($this->c1);
 13 |     $c1 = $this->c1;
 14 |     $c1->f($c1);

File "workplace_non_exact.php", line 12, character 5 - line 12, character 13:

But got `C1`

 8 | abstract class Test {
 9 |   private »C1« $c1;
10 | 
11 |   public function fInstance(): void {
12 |     $this->c1->f($this->c1);
13 |     $c1 = $this->c1;
14 |     $c1->f($c1);

File "workplace_non_exact.php", line 9, character 11 - line 9, character 12:

This error has 6 steps, a maximum depth of 1 and contains 1 reversal.

Here's why: this hint

 8 | abstract class Test {
 9 |   private »C1« $c1;
10 | 
11 |   public function fInstance(): void {
12 |     $this->c1->f($this->c1);
13 |     $c1 = $this->c1;
14 |     $c1->f($c1);

File "workplace_non_exact.php", line 9, character 11 - line 9, character 12:

flows into this expression because of inference

  8 | abstract class Test {
  9 |   private C1 $c1;
 10 | 
 11 |   public function fInstance(): void {
 12 |     $this->c1->f(»$this«->c1);
 13 |     $c1 = $this->c1;
 14 |     $c1->f($c1);

File "workplace_non_exact.php", line 12, character 18 - line 12, character 22:

which itself flows into this type variable because of inference

  8 | abstract class Test {
  9 |   private C1 $c1;
 10 | 
 11 |   public function fInstance(): void {
 12 |     $this->c1->f(»$this->c1«);
 13 |     $c1 = $this->c1;
 14 |     $c1->f($c1);

File "workplace_non_exact.php", line 12, character 18 - line 12, character 26:

which itself flows into this expression because of the functions return type

  8 | abstract class Test {
  9 |   private C1 $c1;
 10 | 
 11 |   public function fInstance(): void {
 12 |     $this->c1->f(»$this->c1«);
 13 |     $c1 = $this->c1;
 14 |     $c1->f($c1);

File "workplace_non_exact.php", line 12, character 18 - line 12, character 26:

which itself flows up into this expression as the 1st function parameter

  8 | abstract class Test {
  9 |   private C1 $c1;
 10 | 
 11 |   public function fInstance(): void {
 12 |     »$this->c1->f($this->c1)«;
 13 |     $c1 = $this->c1;
 14 |     $c1->f($c1);

File "workplace_non_exact.php", line 12, character 5 - line 12, character 27:

which itself flows from this function or method  because they are required to be subtypes

 3 | abstract class C1 {
 4 |   public function »f«(this $_): void {
 5 |   }
 6 | }

File "workplace_non_exact.php", line 4, character 19 - line 4, character 19:

which itself flows down into this hint as the 1st function parameter

 3 | abstract class C1 {
 4 |   public function f(»this« $_): void {
 5 |   }
 6 | }

File "workplace_non_exact.php", line 4, character 21 - line 4, character 24:

Since `C1` is not final

 8 | abstract class Test {
 9 |   private »C1« $c1;
10 | 
11 |   public function fInstance(): void {
12 |     $this->c1->f($this->c1);
13 |     $c1 = $this->c1;
14 |     $c1->f($c1);

File "workplace_non_exact.php", line 9, character 11 - line 9, character 12:

this might not be a `C1`

 8 | abstract class Test {
 9 |   private »C1« $c1;
10 | 
11 |   public function fInstance(): void {
12 |     $this->c1->f($this->c1);
13 |     $c1 = $this->c1;
14 |     $c1->f($c1);

File "workplace_non_exact.php", line 9, character 11 - line 9, character 12:

2 errors found.
