error: Typing[4110] Invalid argument

 11 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 12 | 
 13 | function subtype_bad_contravariant(MyB<Sub, Super> $x): void {
 14 |   takes_my_a(»$x«);
 15 | }

File "class_subtyping_contravariant.php", line 14, character 14 - line 14, character 15:

Expected `Sub`

 11 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 12 | 
 13 | function subtype_bad_contravariant(MyB<»Sub«, Super> $x): void {
 14 |   takes_my_a($x);
 15 | }

File "class_subtyping_contravariant.php", line 13, character 40 - line 13, character 42:

But got `Super`

 11 | function takes_my_a(MyA<Sub, »Super«, Super> $_): void {}
 12 | 
 13 | function subtype_bad_contravariant(MyB<Sub, Super> $x): void {
 14 |   takes_my_a($x);
 15 | }

File "class_subtyping_contravariant.php", line 11, character 30 - line 11, character 34:

This error has 8 steps, a maximum depth of 2 and contains 2 reversals.

Here's why: this hint

 11 | function takes_my_a(MyA<Sub, »Super«, Super> $_): void {}
 12 | 
 13 | function subtype_bad_contravariant(MyB<Sub, Super> $x): void {
 14 |   takes_my_a($x);
 15 | }

File "class_subtyping_contravariant.php", line 11, character 30 - line 11, character 34:

flows up into this hint as the contravariant, 2nd type parameter of the class `\MyA`

 11 | function takes_my_a(»MyA<Sub, Super, Super>« $_): void {}
 12 | 
 13 | function subtype_bad_contravariant(MyB<Sub, Super> $x): void {
 14 |   takes_my_a($x);
 15 | }

File "class_subtyping_contravariant.php", line 11, character 21 - line 11, character 42:

which itself flows up from this function or method  as the 1st function parameter

 11 | function »takes_my_a«(MyA<Sub, Super, Super> $_): void {}
 12 | 
 13 | function subtype_bad_contravariant(MyB<Sub, Super> $x): void {
 14 |   takes_my_a($x);
 15 | }

File "class_subtyping_contravariant.php", line 11, character 10 - line 11, character 19:

which itself flows into this expression because they are required to be subtypes

 11 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 12 | 
 13 | function subtype_bad_contravariant(MyB<Sub, Super> $x): void {
 14 |   »takes_my_a«($x);
 15 | }

File "class_subtyping_contravariant.php", line 14, character 3 - line 14, character 12:

which itself flows down from this expression as the 1st function parameter

 11 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 12 | 
 13 | function subtype_bad_contravariant(MyB<Sub, Super> $x): void {
 14 |   takes_my_a(»$x«);
 15 | }

File "class_subtyping_contravariant.php", line 14, character 14 - line 14, character 15:

which itself flows from this expression because the local variable has this type

 11 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 12 | 
 13 | function subtype_bad_contravariant(MyB<Sub, Super> »$x«): void {
 14 |   takes_my_a($x);
 15 | }

File "class_subtyping_contravariant.php", line 13, character 52 - line 13, character 53:

which itself flows from this hint because it is a parameter hint

 11 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 12 | 
 13 | function subtype_bad_contravariant(»MyB<Sub, Super>« $x): void {
 14 |   takes_my_a($x);
 15 | }

File "class_subtyping_contravariant.php", line 13, character 36 - line 13, character 50:

which itself flows from this hint because they are subclass and superclass

 5 | class MyB<-T1, T2> extends »MyA<Sub, T1, T2>« {}
 6 | 
 7 | class Super {}

File "class_subtyping_contravariant.php", line 5, character 28 - line 5, character 43:

which itself flows down into this hint as the contravariant, 2nd type parameter of the class `\MyA`

 11 | function takes_my_a(MyA<Sub, Super, Super> $_): void {}
 12 | 
 13 | function subtype_bad_contravariant(MyB<»Sub«, Super> $x): void {
 14 |   takes_my_a($x);
 15 | }

File "class_subtyping_contravariant.php", line 13, character 40 - line 13, character 42:

1 error found.
