File "invalid_disjoint_check_methods_overlapping_attribute.php", line 17, characters 13-60:
This call to 'contains' will always return the same value, because type Map<string, mixed> is disjoint from type int. (Lint[5638])
File "invalid_disjoint_check_methods_overlapping_attribute.php", line 27, characters 10-29:
This call to 'contains' will always return the same value, because type Foo is disjoint from type int. (Lint[5638])
File "invalid_disjoint_check_methods_overlapping_attribute.php", line 30, characters 10-29:
This call to 'contains' will always return the same value, because type Foo is disjoint from type int. (Lint[5638])
File "invalid_disjoint_check_methods_overlapping_attribute.php", line 33, characters 10-29:
This call to 'contains' will always return the same value, because type Foo is disjoint from type int. (Lint[5638])
File "invalid_disjoint_check_methods_overlapping_attribute.php", line 36, characters 10-29:
This call to 'contains' will always return the same value, because type Foo is disjoint from type int. (Lint[5638])
File "invalid_disjoint_check_methods_overlapping_attribute.php", line 39, characters 10-29:
This call to 'contains' will always return the same value, because type Foo is disjoint from type int. (Lint[5638])
File "invalid_disjoint_check_methods_overlapping_attribute.php", line 42, characters 10-29:
This call to 'contains' will always return the same value, because type Foo is disjoint from type int. (Lint[5638])
File "invalid_disjoint_check_methods_overlapping_attribute.php", line 45, characters 10-29:
This call to 'contains' will always return the same value, because type Foo is disjoint from type int. (Lint[5638])
File "invalid_disjoint_check_methods_overlapping_attribute.php", line 48, characters 10-29:
This call to 'contains' will always return the same value, because type Foo is disjoint from type int. (Lint[5638])
File "invalid_disjoint_check_methods_overlapping_attribute.php", line 51, characters 10-29:
This call to 'contains' will always return the same value, because type Foo is disjoint from type Baz. (Lint[5638])
File "invalid_disjoint_check_methods_overlapping_attribute.php", line 54, characters 10-29:
This call to 'contains' will always return the same value, because type Foo is disjoint from type <expr#4> as Bar. (Lint[5638])
File "invalid_disjoint_check_methods_overlapping_attribute.php", line 57, characters 10-29:
This call to 'contains' will always return the same value, because type Bar is disjoint from type Foo. (Lint[5638])
File "invalid_disjoint_check_methods_overlapping_attribute.php", line 105, characters 10-29:
This call to 'contains' will always return the same value, because type string is disjoint from type EnumInt. (Lint[5638])
File "invalid_disjoint_check_methods_overlapping_attribute.php", line 124, characters 22-28:
Explicit `dynamic` type usage in APIs turn off most checks the Hack type checker performs. This frequently leads to reliability issues. (Lint[5809])
File "invalid_disjoint_check_methods_overlapping_attribute.php", line 128, characters 3-25:
Non-dynamic calls to 'isEqual' will always return the same value, because type int is disjoint from type string. (Lint[5638])
File "invalid_disjoint_check_methods_overlapping_attribute.php", line 134, characters 3-16:
This call to 'isEqual' will always return the same value, because type string is disjoint from type int. (Lint[5638])
File "invalid_disjoint_check_methods_overlapping_attribute.php", line 136, characters 3-16:
This call to 'isEqual' will always return the same value, because type string is disjoint from type int. (Lint[5638])
File "invalid_disjoint_check_methods_overlapping_attribute.php", line 141, characters 3-20:
This call to 'isEqual' will always return the same value, because type vec<int> is disjoint from type bool. (Lint[5638])
