#
# Some tests of property/constant initializers.
#

.class Init {
  .default_ctor;
  .const BAR = """s:4:"1242";""";
  .property [static public] N foo = """s:11:"static prop";""";
  .property [public] N nonstat = """s:25:"this is a normal property";""";
}

.class Uninit {
  .default_ctor;
  .const BAR = uninit;
  .property [static public] N foo = uninit;
  .property [public] N nonstat = uninit;

  .method [static public] N 86cinit(N $which) {
    CGetL $which
    String "BAR"
    Same
    JmpZ wtf

    String "default BAR value"
    RetC

  wtf:
    String "unknown property"
    Fatal Runtime
  }

  .method [static public] N 86sinit() {
    .coeffects_static pure;
    String "default ::foo value"
    InitProp "foo" Static

    Null
    RetC
  }

  .method [static public] N 86pinit() {
    .coeffects_static pure;
    CheckProp "nonstat"
    JmpNZ isset
    String "code-created prop value"
    InitProp "nonstat" NonStatic

  isset:
    Null
    RetC
  }
}

.function N do_test(N $who) {
  .declvars $obj;
  CGetL $who
  ClassGetC Normal
  ClsCns "BAR"
  String "\n"
  Concat
  Print
  PopC

  String "foo"
  CGetL $who
  ClassGetC Normal
  CGetS Any
  String "\n"
  Concat
  Print
  PopC

  CGetL $who
  ClassGetC Normal
  NewObj
  Dup
  NullUninit
  FCallCtor <LockWhileUnwinding> 0 1 "" "" - "" ""
  PopC
  LockObj
  SetL $obj
  PopC

  String "nonstat"
  BaseL $obj Warn Any
  QueryM 1 CGet PC:0 Any
  String "\n"
  Concat
  Print
  PopC

  Null
  RetC
}

.function N init_test {
  NullUninit
  NullUninit
    String "Init"
  FCallFuncD <> 1 1 "" "" - "" "do_test"
  RetC
}

.function N uninit_test {
  NullUninit
  NullUninit
    String "Uninit"
  FCallFuncD <> 1 1 "" "" - "" "do_test"
  RetC
}

.function ["__EntryPoint"("""y:0:{}""")] N main() {
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" "" - "" "init_test"
  PopC
  NullUninit
  NullUninit
  FCallFuncD <> 0 1 "" "" - "" "uninit_test"
  PopC

  Int 1
  RetC
}
